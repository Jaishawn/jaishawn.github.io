 //////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object){ 
var array = [];
for(var key in object){
    array.push(object[key]);
}

return array;


} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
return Object.keys(object).join(" ");
}

//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
  var arr2 = [];
  for( var key in object){
      if(typeof object[key] == 'string'){
          arr2.push(object[key]);
      }
  }
  return arr2.join(" ");
  
}

//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
  if (Array.isArray(collection) == true ){
      return "array";
     } else{ 
         return "object";
     }    
}

//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
var arr = [];
    var words = string.split(" ");
    for (var i = 0; i < words.length; i++){
        var copyOfThisWord =words[i];
        var newWord = copyOfThisWord.charAt(0).toUpperCase() + copyOfThisWord.slice(1);
        arr.push(newWord);
    }
    return arr.join(" ");
    
}

//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
   var arr = [];
    var words = string.split(" ");
    for (var i = 0; i < words.length; i++){
        var copyOfThisWord =words[i];
        var newWord = copyOfThisWord.charAt(0).toUpperCase() + copyOfThisWord.slice(1);
        arr.push(newWord);
    }
    return arr.join(" ");
    
}

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
 var name = object.name.charAt(0).toUpperCase() +  object.name.slice(1);
        return "Welcome "  +  name + "!";
}
//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object){
   var species = capitalizeWord(object.species);
   var name = capitalizeWord(object.name);
   
    
    return name   +  " is a "  + species ;

     
}

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
function maybeNoises(object) {
    
    if(typeof object.noises === 'undefined') {
        return 'there are no noises';
    }
        else if(Array.isArray(object.noises) === true && object.noises.length >= 1) {
            return object.noises.join(' ');
        }
        else {
            return 'there are no noises';
        }
}

//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
///////////////////////////////////////////////////////////////////

function hasWord(words, string){
    var poss = words.split(" ");  
    for(var i = 0; i < words.length; i++){
     if (string == poss[i]){
        return true;
    } 
    
    }
    return false;
}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend (name, object) {
    

object.friends.push(name);
return object;
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
    if(object.friends === undefined){
      return false;   
    }
    for(var i = 0; i < object.friends.length; i++){
        if(object.friends[i] == name){
            return true;
        }
    }
   return false;
}

//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(string, array) {
    var newArr = [];
    for(var i = 0; i < array.length; i++){
        if(string !== array[i].name && array[i].friends.indexOf(string)){
            newArr.push(array[i].name);
        }

    }
return newArr;
}
///////////////////////////////////////////////////////////////////// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {

object[key] = value;
return object;

}

//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {
 for(var i = 0; i < array.length; i++){
    delete object[array[i]];
    }
}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {
array.sort();
for(var i = array.length; i--;){
    if(array[i] === array[i - 1]){
        array.splice(i, 1);
    }
}
return array;
}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}